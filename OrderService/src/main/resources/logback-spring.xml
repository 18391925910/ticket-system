<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <include resource="org/springframework/boot/logging/logback/defaults.xml" />
    <include resource="org/springframework/boot/logging/logback/console-appender.xml" />

    <property value="/usr/ticket_system/log/" name="LOG_HOME"/>

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>


    <!--kafka记录-->
    <appender name="createOrderLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}-createOrderLog.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers class="net.logstash.logback.composite.loggingevent.LoggingEventJsonProviders">
                <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
                <pattern>
                    <pattern>
                        {
                        "timestamp":"%date{ISO8601}",
                        "level": "%level",
                        "trace": "%X{X-B3-TraceId:-}",
                        "requestId": "%X{requestId}",
                        "remoteIp": "%X{remoteIp}",
                        "span": "%X{X-B3-SpanId:-}",
                        "parent":
                        "%X{X-B3-ParentSpanId:-}",
                        "thread": "%thread",
                        "class":
                        "%logger{40}",
                        "message": "%message",
                        "stack_trace":
                        "%exception{10}"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>

    <!--日志分级别输出-->
    <!--info级别-->
    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}-info.log</fileNamePattern>
        </rollingPolicy>
        <append>true</append>
        <encoder>
            <pattern>{
                "timestamp":"%date{ISO8601}",
                "level": "%level",
                "trace": "%X{X-B3-TraceId:-}",
                "requestId": "%X{requestId}",
                "remoteIp": "%X{remoteIp}",
                "span": "%X{X-B3-SpanId:-}",
                "parent":
                "%X{X-B3-ParentSpanId:-}",
                "thread": "%thread",
                "class":
                "%logger{40}",
                "message": "%message",
                "stack_trace":
                "%exception{10}"
                }</pattern>
            <charset>utf-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter"><!-- 只打印INFO日志 -->
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--warn级别-->
    <appender name="WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}-warn.log</fileNamePattern>
        </rollingPolicy>
        <append>true</append>
        <encoder>
            <pattern>{
                "timestamp":"%date{ISO8601}",
                "level": "%level",
                "trace": "%X{X-B3-TraceId:-}",
                "requestId": "%X{requestId}",
                "remoteIp": "%X{remoteIp}",
                "span": "%X{X-B3-SpanId:-}",
                "parent":
                "%X{X-B3-ParentSpanId:-}",
                "thread": "%thread",
                "class":
                "%logger{40}",
                "message": "%message",
                "stack_trace":
                "%exception{10}"
                }</pattern>
            <charset>utf-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter"><!-- 只打印WARN日志 -->
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--error级别-->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/%d{yyyy-MM-dd}-error.log</fileNamePattern>
        </rollingPolicy>
        <append>true</append>
        <encoder>
            <pattern>{
                "timestamp":"%date{ISO8601}",
                "level": "%level",
                "trace": "%X{X-B3-TraceId:-}",
                "requestId": "%X{requestId}",
                "remoteIp": "%X{remoteIp}",
                "span": "%X{X-B3-SpanId:-}",
                "parent":
                "%X{X-B3-ParentSpanId:-}",
                "thread": "%thread",
                "class":
                "%logger{40}",
                "message": "%message",
                "stack_trace":
                "%exception{10}"
                }</pattern>
            <charset>utf-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter"><!-- 只打印ERROR日志 -->
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>


    <!--name属性是代码里创建日志用的（例如：Logger clog = LoggerFactory.getLogger("createLog");）-->
    <logger name="btw" additivity="true" level="WARN">
        <appender-ref ref="createOrderLog"/><!--上面appender元素的name值。为了和logger的name属性做区分-->
    </logger>



    <!-- 日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="INFO"/>
        <appender-ref ref="WARN"/>
        <appender-ref ref="ERROR"/>
    </root>

</configuration>